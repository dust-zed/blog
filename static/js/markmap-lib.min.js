/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/markmap-lib@0.15.3/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*! markmap-lib v0.15.3 | MIT License */
"use strict";var _extends=require("@babel/runtime/helpers/extends"),remarkable=require("remarkable"),markmapCommon=require("markmap-common"),remarkableKatex=require("remarkable-katex"),yaml=require("js-yaml"),hljs=require("highlight.js");const template='<!DOCTYPE html>\n<html>\n<head>\n<meta charset="UTF-8">\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta http-equiv="X-UA-Compatible" content="ie=edge">\n<title>Markmap</title>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n}\n#mindmap {\n  display: block;\n  width: 100vw;\n  height: 100vh;\n}\n</style>\n\x3c!--CSS--\x3e\n</head>\n<body>\n<svg id="mindmap"></svg>\n\x3c!--JS--\x3e\n</body>\n</html>\n',baseJsPaths=["d3@7.8.5/dist/d3.min.js","markmap-view@0.15.3/dist/browser/index.js"],name$3="katex",preloadScripts$1=["katex@0.16.8/dist/katex.min.js"].map((e=>markmapCommon.buildJSItem(e))),webfontloader=markmapCommon.buildJSItem("webfontloader@1.6.28/webfontloader.js");webfontloader.data.defer=!0;const styles$1=["katex@0.16.8/dist/katex.min.css"].map((e=>markmapCommon.buildCSSItem(e))),config$1={versions:{katex:"0.16.8",webfontloader:"1.6.28"},preloadScripts:preloadScripts$1,scripts:[{type:"iife",data:{fn:e=>{window.WebFontConfig={custom:{families:["KaTeX_AMS","KaTeX_Caligraphic:n4,n7","KaTeX_Fraktur:n4,n7","KaTeX_Main:n4,n7,i4,i7","KaTeX_Math:i4,i7","KaTeX_Script","KaTeX_SansSerif:n4,n7,i4","KaTeX_Size1","KaTeX_Size2","KaTeX_Size3","KaTeX_Size4","KaTeX_Typewriter"]},active:()=>{e().refreshHook.call()}}},getParams:({getMarkmap:e})=>[e]}},webfontloader],styles:styles$1};function createTransformHooks(e){return{transformer:e,parser:new markmapCommon.Hook,beforeParse:new markmapCommon.Hook,afterParse:new markmapCommon.Hook,htmltag:new markmapCommon.Hook,retransform:new markmapCommon.Hook}}function definePlugin(e){return e}const plugin$1=definePlugin({name:name$3,config:config$1,transform(e){var t,n;let r=markmapCommon.noop;return e.parser.tap((e=>{e.use(remarkableKatex),e.renderer.rules.katex=markmapCommon.wrapFunction(e.renderer.rules.katex,((e,...t)=>(r(),e(...t))))})),e.beforeParse.tap(((e,t)=>{r=()=>{t.features[name$3]=!0}})),{styles:null==(t=plugin$1.config)?void 0:t.styles,scripts:null==(n=plugin$1.config)?void 0:n.scripts}}}),name$2="frontmatter";var frontmatter=definePlugin({name:name$2,transform:e=>(e.beforeParse.tap(((e,t)=>{const{content:n}=t;if(!n.startsWith("---\n"))return;const r=n.indexOf("\n---\n");if(r<0)return;const a=n.slice(4,r);let s;try{var o;s=yaml.load(a),null!=(o=s)&&o.markmap&&(s.markmap=normalizeMarkmapJsonOptions(s.markmap))}catch(e){return}t.frontmatter=s,t.content=n.slice(r+5),t.contentLineOffset=n.slice(0,r).split("\n").length+1})),{})});function normalizeMarkmapJsonOptions(e){if(e)return["color","extraJs","extraCss"].forEach((t=>{null!=e[t]&&(e[t]=normalizeStringArray(e[t]))})),["duration","maxWidth","initialExpandLevel"].forEach((t=>{null!=e[t]&&(e[t]=normalizeNumber(e[t]))})),e}function normalizeStringArray(e){var t;let n;return"string"==typeof e?n=[e]:Array.isArray(e)&&(n=e.filter((e=>e&&"string"==typeof e))),null!=(t=n)&&t.length?n:void 0}function normalizeNumber(e){if(!isNaN(+e))return+e}const name$1="npmUrl";var npmUrl=definePlugin({name:name$1,transform:e=>(e.afterParse.tap(((t,n)=>{const{frontmatter:r}=n,a=null==r?void 0:r.markmap;a&&["extraJs","extraCss"].forEach((t=>{const n=a[t];n&&(a[t]=n.map((t=>t.startsWith("npm:")?e.transformer.urlBuilder.getFullUrl(t.slice(4)):t)))}))})),{})});const name="hljs",preloadScripts=["@highlightjs/cdn-assets@11.8.0/highlight.min.js"].map((e=>markmapCommon.buildJSItem(e))),styles=["@highlightjs/cdn-assets@11.8.0/styles/default.min.css"].map((e=>markmapCommon.buildCSSItem(e))),config={versions:{hljs:"11.8.0"},preloadScripts:preloadScripts,styles:styles},plugin=definePlugin({name:name,config:config,transform(e){var t;let n=markmapCommon.noop;return e.parser.tap((e=>{e.set({highlight:(e,t)=>(n(),hljs.highlightAuto(e,t?[t]:void 0).value)})})),e.beforeParse.tap(((e,t)=>{n=()=>{t.features[name]=!0}})),{styles:null==(t=plugin.config)?void 0:t.styles}}}),plugins=[frontmatter,plugin$1,plugin,npmUrl];function patchJSItem(e,t){return"script"===t.type&&t.data.src?_extends({},t,{data:_extends({},t.data,{src:e.urlBuilder.getFullUrl(t.data.src)})}):t}function patchCSSItem(e,t){return"stylesheet"===t.type&&t.data.href?_extends({},t,{data:_extends({},t.data,{href:e.urlBuilder.getFullUrl(t.data.href)})}):t}function cleanNode(e){if("heading"===e.type)e.children=e.children.filter((e=>"paragraph"!==e.type));else if("list_item"===e.type){var t;e.children=e.children.filter((t=>!["paragraph","fence"].includes(t.type)||(e.content||(e.content=t.content,e.payload=_extends({},e.payload,t.payload)),!1))),null!=(null==(t=e.payload)?void 0:t.index)&&(e.content=`${e.payload.index}. ${e.content}`)}else if("ordered_list"===e.type){var n,r;let t=null!=(n=null==(r=e.payload)?void 0:r.startIndex)?n:1;e.children.forEach((e=>{"list_item"===e.type&&(e.payload=_extends({},e.payload,{index:t}),t+=1)}))}e.children.length>0&&(e.children.forEach((e=>cleanNode(e))),1!==e.children.length||e.children[0].content||(e.children=e.children[0].children))}function resetDepth(e,t=0){e.depth=t,e.children.forEach((e=>{resetDepth(e,t+1)}))}class Transformer{constructor(e=plugins){this.assetsMap={},this.urlBuilder=new markmapCommon.UrlBuilder,this.hooks=createTransformHooks(this),this.plugins=e.map((e=>"function"==typeof e?e():e));const t={};for(const{name:e,transform:n}of this.plugins)t[e]=n(this.hooks);this.assetsMap=t;const n=new remarkable.Remarkable("full",{html:!0,breaks:!0,maxNesting:1/0});n.renderer.rules.htmltag=markmapCommon.wrapFunction(n.renderer.rules.htmltag,((e,...t)=>{const n=e(...t);return this.hooks.htmltag.call({args:t,result:n}),n})),this.md=n,this.hooks.parser.call(n)}buildTree(e){const{md:t}=this,n={type:"root",depth:0,content:"",children:[],payload:{}},r=[n];let a=0;for(const n of e){const e={};n.lines&&(e.lines=n.lines);let i=r[r.length-1];if(n.type.endsWith("_open")){const t=n.type.slice(0,-5);var s;if("heading"===t)for(a=n.hLevel;(null==(o=i)?void 0:o.depth)>=a;){var o;r.pop(),i=r[r.length-1]}else a=Math.max(a,(null==(s=i)?void 0:s.depth)||0)+1,"ordered_list"===t&&(e.startIndex=n.order);const l={type:t,depth:a,payload:e,content:"",children:[]};i.children.push(l),r.push(l)}else{if(!i)continue;if(n.type===`${i.type}_close`)"heading"===i.type?a=i.depth:(r.pop(),a=0);else if("inline"===n.type){const e=this.hooks.htmltag.tap((e=>{var t;const n=null==(t=e.result)?void 0:t.match(/^<!--([\s\S]*?)-->$/),r=null==n?void 0:n[1].trim().split(" ");"fold"===(null==r?void 0:r[0])&&(i.payload=_extends({},i.payload,{fold:["all","recursively"].includes(r[1])?2:1}),e.result="")})),r=t.renderer.render([n],t.options,{});e(),i.content=`${i.content||""}${r}`}else if("fence"===n.type){const r=t.renderer.render([n],t.options,{});i.children.push({type:n.type,depth:a+1,content:r,children:[],payload:e})}}}return n}transform(e){var t;const n={content:e,features:{},contentLineOffset:0};this.hooks.beforeParse.call(this.md,n);const r=this.md.parse(n.content,{});this.hooks.afterParse.call(this.md,n);let a=this.buildTree(r);return cleanNode(a),1===(null==(t=a.children)?void 0:t.length)&&(a=a.children[0]),resetDepth(a),_extends({},n,{root:a})}getAssets(e){const t=[],n=[];null!=e||(e=this.plugins.map((e=>e.name)));for(const r of e.map((e=>this.assetsMap[e])))r&&(r.styles&&t.push(...r.styles),r.scripts&&n.push(...r.scripts));return{styles:t.map((e=>patchCSSItem(this,e))),scripts:n.map((e=>patchJSItem(this,e)))}}getUsedAssets(e){const t=this.plugins.map((e=>e.name)).filter((t=>e[t]));return this.getAssets(t)}fillTemplate(e,t,n){var r;null!=(r=n=_extends({},n)).baseJs||(r.baseJs=baseJsPaths.map((e=>this.urlBuilder.getFullUrl(e))).map((e=>markmapCommon.buildJSItem(e))));const{scripts:a,styles:s}=t,o=[...s?markmapCommon.persistCSS(s):[]],i={getMarkmap:()=>window.markmap,getOptions:n.getOptions,jsonOptions:n.jsonOptions,root:e},l=[...markmapCommon.persistJS([...n.baseJs,...a||[],{type:"iife",data:{fn:(e,t,n,r)=>{const a=e();window.mm=a.Markmap.create("svg#mindmap",(t||a.deriveOptions)(r),n)},getParams:({getMarkmap:e,getOptions:t,root:n,jsonOptions:r})=>[e,t,n,r]}}],i)];return template.replace("\x3c!--CSS--\x3e",(()=>o.join(""))).replace("\x3c!--JS--\x3e",(()=>l.join("")))}}const transformerVersions={"markmap-lib":"0.15.3",d3:"7.8.5"};exports.Transformer=Transformer,exports.baseJsPaths=baseJsPaths,exports.builtInPlugins=plugins,exports.template=template,exports.transformerVersions=transformerVersions;
//# sourceMappingURL=/sm/265857d5596dfa5968414cd3ee5ff98347ad5b8829d719eadfcffbb4d9b153a9.map